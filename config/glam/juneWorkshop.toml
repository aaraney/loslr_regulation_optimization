[experimentalDesign]
releaseFunction = "ruleCurve"                       # release function script name
septemberRule = "off"                               # september rule: "off" or september rule script name
limitType = "Bv7_glamUpdates"                       # flow limits script name
stlawRouting = "stlaw"                              # st. lawrence routing script name
trace = "historic"                                  # folder name of the hydrologic trace that contains input data that is being optimized over
inputFile = "1961_2020/12month_sqAR"                # path and file name of the input data that is being optimized over

[optimizationParameters]
numDV = 9                                           # number of decision variables
numObj = 7                                          # number of objectives
numCon = 0                                          # number of constraints
nfe = 75000                                         # number of function evaluations
popSize = 100                                       # initial population size
metFreq = 100                                       # frequency of function evaluations to report metrics

[decisionVariables]
dvName = [                                          # decision variables names
    "wetIndicatorThreshold", 
    "wetConfidenceThreshold", 
    "C1", 
    "addC1", 
    "P1", 
    "C2", 
    "P2", 
    "dryLevelThreshold", 
    "dryFlowAdjustment",]
lowerBounds = [ 5500.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 74.0, -50.0,]             # lower bounds of decision variables
upperBounds = [ 10000.0, 250.0, 1000.0, 250.0, 2.0, 300.0, 2.0, 76.5, 50.0,]    # upper bounds of decision variables
normalized = "False"                                # optimize normalized ("True") or actual value ranges ("False")
normalizedRange = []

[performanceIndicators]
objectiveFunction = "legacyPIs"            # objective function script name
metricWeighting = "netAnnualAverage"                # weighting function
objectiveModels = [                                 # script names of PI models to run in `functions/`
    "upstreamCoastalImpacts", 
    "downstreamCoastalImpacts", 
    "commercialNavigation", 
    "hydropowerProduction", 
    "meadowMarsh", 
    "muskratLodgeViability", 
    "recreationalBoating"
]
piName = [                                          # names of performance indicators
    "Coastal Impacts: Upstream Buildings Impacted (#)", 
    "Coastal Impacts: Downstream Buildings Impacted (#)", 
    "Commercial Navigation: Ontario + Seaway + Montreal Transportation Costs ($)", 
    "Hydropower: Moses-Saunders + Niagara Energy Value ($)", 
    "Meadow Marsh: Area (ha)", 
    "Muskrat Lodge Viability (%)", 
    "Recreational Boating: Impact Costs ($)"
]
epsilonValue = [ 1650.0, 100.0, 1000000.0, 22500000.0, 500.0, 3.0, 900000.0,]
direction = [ "min", "min", "min", "max", "max", "max", "min",]

[releaseFunction]
inputVars = [ "forNTS", "ontLevelBOQ",]