[experimentalDesign]
releaseFunction = "ruleCurve"   # release function script name
septemberRule = "off"           # september rule: on, off
limitType = "onlyPhysicalLimits"# flow limits script name
stlawRouting = "stlaw"          # st. lawrence routing script name
slonValues = "True"             # slon vs ottawa river flows
forecastLeadTime = "12month"    # forecast lead-time: 12month, 6month, 3month, 1month
forecastSkill = "sqAR"          # forecast skill: 12-month status quo AR(1) [sqAR], linear model [sqLM], perfect [0]
trace = "1961_2020"              # trace to simulate
 
[optimizationParameters]
numDV = 9                       # number of decision variables
numObj = 7                      # number of objectives
numCon = 0                      # number of constraints
nfe = 75000                     # number of function evaluations
popSize = 100                   # initial population size
metFreq = 100                   # frequency of function evaluations to report metrics

[decisionVariables]
dvName = [
    "wetIndicatorThreshold", 
    "wetConfidenceThreshold",
    "C1",
    "addC1",
    "P1",
    "P1",
    "P2",
    "dryLevelThreshold",
    "dryFlowAdjustment",
]
lowerBounds = [
    5500.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.5,
    0.5,
    74.0,
    -50.0,
]
upperBounds = [
    10000.0,
    250.0,
    1000.0,
    250.0,
    2.0,
    300.0,
    2.0,
    76.5,
    50.0,
]
normalized = "False"
# normalizedRange = []

[releaseFunction]
inputVars = ["forNTS", "ontLevelBOQ"]
# outputVars = ["rfFlow"]

[performanceIndicators]
objectiveFormulation = "legacyPIs"
metricWeighting = 'netAnnualAverage'
objectiveModels = [
    "upstreamCoastalImpacts", 
    "downstreamCoastalImpacts", 
    "commercialNavigation", 
    "hydropowerProduction", 
    "meadowMarsh", 
    "muskratLodgeViability", 
    "recreationalBoating"
]
piName = [
    "Coastal Impacts: Upstream Buildings Impacted (#)",
    "Coastal Impacts: Downstream Buildings Impacted (#)",
    "Commercial Navigation: Ontario + Seaway + Montreal Transportation Costs ($)",
    "Hydropower: Moses-Saunders + Niagara Energy Value ($)",
    "Meadow Marsh: Area (ha)",
    "Muskrat Lodge Viability (%)",
    "Recreational Boating: Impact Costs ($)",
]
epsilonValue = [1650.0, 100.0, 1e6, 22.5e6, 500.0, 3.0, 900000.0]
direction = ["min", "min", "min", "max", "max", "max", "min"]
